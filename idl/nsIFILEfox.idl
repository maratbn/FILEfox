/**
 *  Copyright (c) 2010 Marat Nepomnyashy    maratbn@gmail
 *
 *  Module: idl/nsIFILEfox.idl
 *
 *  Redistribution and use in source and binary forms, with or without
 *  modification, are permitted provided that the following conditions are met:
 *      * Redistributions of source code must retain the above copyright
 *        notice, this list of conditions and the following disclaimer.
 *      * Redistributions in binary form must reproduce the above copyright
 *        notice, this list of conditions and the following disclaimer in the
 *        documentation and/or other materials provided with the distribution.
 *      * Neither the name of the <organization> nor the
 *        names of its contributors may be used to endorse or promote products
 *        derived from this software without specific prior written permission.
 * 
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" 
 *  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 *  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 *  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY
 *  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 *  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 *  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 *  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 *  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 *  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 * 
 *
 *  The XPCOM interface 'nsIFILEfox' is declared here.
 */


#include "nsISupports.idl"

[scriptable, uuid(e82cca84-1222-4443-a044-246f9802b372)]
interface nsIFILEfoxObserver : nsISupports {
    /**
     *  Callback for when a text file has been loaded successfully.
     *
     *  @param  totalLines          Number                  The total number of lines read from the text file.
     *  @param  arrLines            Array                   An Array of Strings with the actual lines.
     */
    void onLoadedTextFile(in unsigned long totalLines, [const, array, size_is(totalLines)] in string arrLines);
};

[scriptable, uuid(7faaf2e7-a039-4a86-89f7-1406110c908c)]
interface nsIFILEfox : nsISupports {

    /**
     *  Returns the version of the currently installed FILEfox extension.
     */
    string getVersion();

    /**
     *  This function is used to have the FILEfox extension request from the user to manually select an ASCII text
     *  file to load.  The function will then initiate the file loading process, and return [ true ] or [ false ]
     *  depending on success.  The file contents will be loaded asynchroneously, and returned in the observer callback
     *  function 'onLoadedTextFile(...)'.
     *
     *
     *  @param  strMessageToUser    String                  A textual request message to display to the user, possibly
     *                                                      explaining why the application is requesting an ASCII text
     *                                                      file.
     *
     *  @param  observer            nsIFILEfoxObserver      Observer with the callback
     */
    boolean requestASCIIFile(in string strMessageToUser, in nsIFILEfoxObserver observer);
};
